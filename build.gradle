// kotlin
buildscript {
    ext.kotlin_version = '1.1.2-2'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'jacoco'

mainClassName = 'com.keidrun.qstackoverflow.app.AppKt'

defaultTasks 'run'

group "com.keidrun.qstackoverflow"
version = "0.0.1"
def tag = "v${project.version}"
def productName = 'Stack Overflow\'s Search CLI'
description = "${project.name} build of the version ${project.version}"

def defaultEncoding = 'UTF-8'

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = defaultEncoding
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.github.kevinsawicki:http-request:6.0'
    compile 'commons-cli:commons-cli:1.4'
    compile 'commons-codec:commons-codec:1.10'
    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile 'com.github.stefanbirkner:system-rules:1.16.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.5"
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Main-Class': mainClassName
        )
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
}

// coverage
jacoco {
    toolVersion = "0.7.+"
}

task codeCoverageReport(type: JacocoReport, dependsOn: 'test') {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    sourceSets sourceSets.main

    reports {
        xml.enabled = true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled = false
        csv.enabled = false
    }
}
